{"version":3,"file":"static/js/605.d1edf247.chunk.js","mappings":"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","sources":["webpack://social-network-app/./src/components/Content/Posts/Post.module.css?c1a3","components/Content/Posts/Post.jsx","components/Content/MyPost.jsx","components/Content/MyPostContainer.jsx","webpack://social-network-app/./src/components/Content/ContentInfo/ContentInfo.module.css?7470","components/Content/ContentInfo/StatusWithHooks.jsx","components/Content/ContentInfo/ProfileDataForm.jsx","components/Content/ContentInfo/ContentInfo.jsx","components/Content/Content.jsx","components/Content/ContentContainer.jsx","components/hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__IcWoY\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://photosfile.com/wp-content/uploads/2022/06/Girl-DP-1.jpg\" alt=\"\" />\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Posts/Post';\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { requiredField, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" validate={[requiredField, maxLength20]} placeholder={'enter text'} id=\"\" cols=\"30\" rows=\"5\" />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: 'profileAddNewPostText' })(AddNewPostForm);\r\n\r\nconst MyPost = React.memo(props => {\r\n    // shouldComponentUpdate(nextProps, nextState){\r\n    //     return nextProps != this.props || nextState != this.state;\r\n    // }\r\n\r\n    console.log(\"render\");\r\n    let postMessage = props.posts.map(post => <Post message={post.post} likesCount={post.likesCount} key={post.id} />);\r\n    // let addNewPost = () => {\r\n    //     props.addPost();\r\n    // };\r\n\r\n    // let onPostChange = (event) => {\r\n    //     let newMessageText = event.target.value;\r\n    //     props.updateNewPostText(newMessageText);\r\n    // }\r\n\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            my post\r\n            <AddNewPostReduxForm onSubmit={addNewPost} />\r\n            <div className='posts'>\r\n                {postMessage}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n});\r\n\r\nexport default MyPost;","\r\nimport React from 'react';\r\nimport MyPost from './MyPost';\r\nimport { addPostActionCreator } from \"../redux/profileReducer\";\r\nimport {connect} from 'react-redux';\r\n\r\n// const MyPostContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n\r\n//                     let addNewPost = () => {\r\n//                         store.dispatch(addPostActionCreator());\r\n//                     };\r\n                \r\n//                     let onPostChange = (e) => {\r\n//                         let text = e.target.value;\r\n//                         let action = updateNewPostTextActionCreator(text);\r\n//                         store.dispatch(action);\r\n//                     }\r\n\r\n//                     return <MyPost updateNewPostText={onPostChange}\r\n//                         addPost={addNewPost}\r\n//                         posts={state.contentPage.posts}\r\n//                         newPostText={state.contentPage.newPostText} />\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStatetoProps = (state) => {\r\n    return {\r\n        posts: state.contentPage.posts,\r\n        newPostText: state.contentPage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostTextActionCreator(text);\r\n        //     dispatch(action);\r\n        // },\r\n        addPost: (newPostText) => {\r\n            let action = addPostActionCreator(newPostText);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStatetoProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContentInfo_item__THcJ-\",\"photo\":\"ContentInfo_photo__hhV5o\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ContentInfo.module.css';\r\nimport PreloaderComponent from '../../Preloader/preloader';\r\n\r\nconst ContentStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activeteEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactiveteEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusThunk(status);\r\n    };\r\n    \r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activeteEditMode}>{props.status || \"------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactiveteEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContentStatusWithHooks;","import { Input, Textarea, createField } from '../../common/FormControls/FormControls';\r\nimport style from '../../common/FormControls/FormsControls.module.css';\r\nimport { Field } from \"redux-form\"\r\n\r\nconst ProfileDataForm = (props) => {\r\n    const { handleSubmit, profile, error } = props;\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>Save</button></div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <b>NAME:</b> {createField(\"Name\", \"fullName\", [], Input)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Looking for a job:</b> {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n\r\n            </div>\r\n            <div>\r\n                <b>My professional skills:</b>\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me:</b>\r\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProfileDataForm;","import s from './ContentInfo.module.css';\r\nimport PreloaderComponent from '../../Preloader/preloader';\r\nimport ContentStatusWithHooks from './StatusWithHooks';\r\nimport React, { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div>\r\n            <b>{contactTitle}:</b> {contactValue}\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    {\r\n        Object.keys(profile.contacts).map(key => {\r\n            console.log(\"key = \" + key);\r\n            console.log(\"profile.contacts[key] = \" + profile.contacts[key]);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n            <div><b>NAME:</b> <span>{profile.fullName}</span></div>\r\n\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet ProfileDataReduxForm = reduxForm({\r\n    form: 'editProfile'\r\n})(ProfileDataForm);\r\n\r\nconst ContentInfo = React.memo(props => {\r\n    let photo = \"https://www.nj.com/resizer/zovGSasCaR41h_yUGYHXbVTQW2A=/1280x0/smart/cloudfront-us-east-1.images.arcpublishing.com/advancelocal/SJGKVE5UNVESVCW7BBOHKQCZVE.jpg\";\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData);\r\n        setEditMode(false);\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.setPhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return <PreloaderComponent />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.photo} src={props.profile.photos?.large || photo} />\r\n                {props.isOwner && <input type='file' onChange={onMainPhotoSelected}></input>}\r\n                <ContentStatusWithHooks status={props.status} updateStatusThunk={props.updateStatusThunk} />\r\n                {editMode ? <ProfileDataReduxForm onSubmit={onSubmit} profile={props.profile} isOwner={props.isOwner} />\r\n                    : <ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={() => { setEditMode(true) }} />}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ContentInfo;","import MyPostContainer from './MyPostContainer';\r\nimport ContentInfo from './ContentInfo/ContentInfo';\r\n\r\nconst Content = (props) => {\r\n    return (\r\n        <div className='content'>\r\n            <ContentInfo saveProfile={props.saveProfile} isOwner={props.isOwner} setPhoto={props.setPhoto} profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n            <MyPostContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","import Content from './Content';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { userProfileThunk, getStatusThunk, updateStatusThunk, setPhoto, saveProfile } from '../redux/profileReducer';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = { params: useParams() };\r\n\r\n        return <Children {...props} match={match} />\r\n    }\r\n}\r\n\r\nclass ContentContainer extends React.Component {\r\n\r\n    refreshContent() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            // userId = this.props.match.params.authorizedUserId;\r\n            userId = 29103;\r\n        }\r\n\r\n        // usersAPI.getUserProfileData(userId).then(response => {\r\n        //     this.props.setUserPofileAC(response.data);\r\n        // });\r\n        this.props.userProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshContent();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapsht) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshContent();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <Content {...this.props} setPhoto={this.props.setPhoto} saveProfile={this.props.saveProfile} isOwner={!this.props.match.params.userId} profile={this.props.profile} status={this.props.status} updateStatusThunk={this.props.updateStatusThunk} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.contentPage.profile,\r\n        status: state.contentPage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { userProfileThunk, getStatusThunk, updateStatusThunk, setPhoto, saveProfile }),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ContentContainer);","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    } \r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","_jsxs","className","s","children","_jsx","src","alt","message","likesCount","maxLength20","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","requiredField","placeholder","id","cols","rows","React","console","log","postMessage","posts","map","post","Post","value","addPost","newPostText","connect","state","contentPage","dispatch","action","addPostActionCreator","MyPost","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_Fragment","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatusThunk","profile","error","style","createField","Input","type","Object","keys","contacts","key","Contacts","_ref","contactTitle","contactValue","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileDataReduxForm","ProfileDataForm","_props$profile$photos","photos","large","target","files","length","setPhoto","ContentStatusWithHooks","formData","saveProfile","PreloaderComponent","ContentInfo","MyPostContainer","withRouter","Children","match","params","useParams","_objectSpread","ContentContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","userProfileThunk","getStatusThunk","refreshContent","prevProps","prevState","snapsht","Content","compose","authorizedUserId","auth","isAuth","withAuthRedirect","mapStateToPropsRedirect","Component","RedirectComponent","Navigate","to"],"sourceRoot":""}