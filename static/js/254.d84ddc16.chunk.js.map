{"version":3,"file":"static/js/254.d84ddc16.chunk.js","mappings":"6NACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,OAAS,wBAAwB,OAAS,yB,6BCoDzKA,EAAa,SAACC,GAChB,IAAIC,EAAI,YAAAC,OAAeF,EAAMG,IAE7B,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAASC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKC,IAAG,GAAAP,OAAKF,EAAMU,WAAaC,IAAI,MACpCH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIZ,EAAKM,SAAEP,EAAMc,SAGtC,EAEMC,EAAU,SAACf,GACb,OACIQ,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,QAAUC,SACrBP,EAAMgB,SAGnB,EAEMC,GAAcC,EAAAA,EAAAA,IAAiB,IAe/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,oBAAlBD,EAbL,SAACpB,GACpB,OACII,EAAAA,EAAAA,MAAA,QAAMkB,SAAUtB,EAAMuB,aAAahB,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,GAAeX,GAAcH,KAAK,iBAAiBe,YAAY,0BAE1GrB,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAIxB,IAIA,EAlFgB,SAACP,GACb,IAAI8B,EAAc9B,EAAM8B,YAEpBC,EAAkBD,EAAYE,QAAQC,KAAI,SAAAC,GAAM,OAAI1B,EAAAA,EAAAA,KAACT,EAAU,CAACe,KAAMoB,EAAOpB,KAAsBX,GAAI+B,EAAO/B,GAAIO,UAAWwB,EAAOxB,WAA5CwB,EAAO/B,GAAkD,IACjJgC,EAAkBL,EAAYM,SAASH,KAAI,SAAAjB,GAAO,OAAIR,EAAAA,EAAAA,KAACO,EAAO,CAACC,QAASA,EAAQA,SAAcA,EAAQb,GAAM,IAC3F2B,EAAYO,eAejC,OAAKrC,EAAMsC,QAGPlC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAUC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,aAAeC,SAC1BwB,KAEL3B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,SAAWC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAAD,SAAM4B,KACN3B,EAAAA,EAAAA,KAACW,EAAmB,CAACG,SAbb,SAACiB,GACjBvC,EAAMwC,YAAYD,EAAME,eAC5B,WAE0BjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAQ,CAAC7B,GAAI,UAwB5C,E,8BCEA,GAAe8B,E,QAAAA,KACXC,EAAAA,EAAAA,KApBkB,SAACC,GACnB,MAAO,CACHf,YAAae,EAAMf,YAE3B,IAEyB,SAACgB,GACtB,MAAO,CAKHN,YAAa,SAACC,GACV,IAAIM,GAASC,EAAAA,EAAAA,GAAyBP,GACtCK,EAASC,EACb,EAER,IAIIE,EAAAA,EAFJ,CAGEC,E","sources":["webpack://social-network-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__G6CDM\",\"dialogsItems\":\"Dialogs_dialogsItems__AUd+A\",\"messages\":\"Dialogs_messages__WNaki\",\"dialog\":\"Dialogs_dialog__7y7Tw\",\"active\":\"Dialogs_active__Irb+B\"};","import React from 'react';\r\nimport { NavLink, Navigate } from 'react-router-dom';\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport s from './Dialogs.module.css';\r\nimport { requiredField, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsPage = props.dialogsPage;\r\n\r\n    let dialogsElements = dialogsPage.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} avatarURL={dialog.avatarURL} />);\r\n    let messageElements = dialogsPage.messages.map(message => <Message message={message.message} key={message.id} />);\r\n    let newMessageText = dialogsPage.newMessageText;\r\n\r\n    // let onSendMessageClick = () => {\r\n    //     props.sendMessage();\r\n    // }\r\n\r\n    // let onMessageTextChange = (e) => {\r\n    //     let newMessageText = e.target.value;\r\n\r\n    //     // props.updateNewMessageText(newMessageText);\r\n    // }\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage} />\r\n                {/* <div>\r\n                    <div>\r\n                        <textarea value={newMessageText}\r\n                            placeholder=\"Enter your message\"\r\n                            onChange={onMessageTextChange}>\r\n                        </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send</button>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/Dialogs/${props.id}`;\r\n\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <img src={`${props.avatarURL}`} alt=\"\" />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[requiredField, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: 'dialogAddMessage' })(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { sendMessageActionCreator } from '../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n// const DialogsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState().dialogsPage;\r\n\r\n//                     let onSendMessageClick = () => {\r\n//                         let action = sendMessageActionCreator();\r\n//                         store.dispatch(action);\r\n//                     }\r\n\r\n//                     let onMessageTextChange = (body) => {\r\n//                         let action = updateNewMessageTextActionCreator(body);\r\n//                         store.dispatch(action);\r\n//                     }\r\n//                     return <Dialogs updateNewMessageText={onMessageTextChange}\r\n//                         sendMessage={onSendMessageClick}\r\n//                         dialogsPage={state} />\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStatetoProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewMessageText: (body) => {\r\n        //     let action = updateNewMessageTextActionCreator(body);\r\n        //     dispatch(action);\r\n        // },\r\n        sendMessage: (newMessageBody) => {\r\n            let action = sendMessageActionCreator(newMessageBody);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["DialogItem","props","path","concat","id","_jsxs","className","s","children","_jsx","src","avatarURL","alt","NavLink","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","dialogsPage","dialogsElements","dialogs","map","dialog","messageElements","messages","newMessageText","isAuth","value","sendMessage","newMessageBody","Navigate","compose","connect","state","dispatch","action","sendMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}