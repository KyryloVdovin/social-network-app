{"version":3,"file":"static/js/921.3f24d9b5.chunk.js","mappings":"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","sources":["webpack://social-network-app/./src/components/Content/Posts/Post.module.css?c1a3","components/Content/Posts/Post.jsx","components/Content/MyPost.jsx","components/Content/MyPostContainer.jsx","components/Content/ContentInfo/StatusWithHooks.jsx","components/Content/ContentInfo/ContentInfo.jsx","components/Content/Content.jsx","components/Content/ContentContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__iyPvd\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://photosfile.com/wp-content/uploads/2022/06/Girl-DP-1.jpg\" alt=\"\" />\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Posts/Post';\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { requiredField, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" validate={[requiredField, maxLength20]} placeholder={'enter text'} id=\"\" cols=\"30\" rows=\"5\" />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: 'profileAddNewPostText' })(AddNewPostForm);\r\n\r\nconst MyPost = React.memo(props => {\r\n    // shouldComponentUpdate(nextProps, nextState){\r\n    //     return nextProps != this.props || nextState != this.state;\r\n    // }\r\n\r\n    console.log(\"render\");\r\n    let postMessage = props.posts.map(post => <Post message={post.post} likesCount={post.likesCount} key={post.id} />);\r\n    // let addNewPost = () => {\r\n    //     props.addPost();\r\n    // };\r\n\r\n    // let onPostChange = (event) => {\r\n    //     let newMessageText = event.target.value;\r\n    //     props.updateNewPostText(newMessageText);\r\n    // }\r\n\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            my post\r\n            <AddNewPostReduxForm onSubmit={addNewPost} />\r\n            <div className='posts'>\r\n                {postMessage}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n});\r\n\r\nexport default MyPost;","\r\nimport React from 'react';\r\nimport MyPost from './MyPost';\r\nimport { addPostActionCreator } from \"../redux/profileReducer\";\r\nimport {connect} from 'react-redux';\r\n\r\n// const MyPostContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n\r\n//                     let addNewPost = () => {\r\n//                         store.dispatch(addPostActionCreator());\r\n//                     };\r\n                \r\n//                     let onPostChange = (e) => {\r\n//                         let text = e.target.value;\r\n//                         let action = updateNewPostTextActionCreator(text);\r\n//                         store.dispatch(action);\r\n//                     }\r\n\r\n//                     return <MyPost updateNewPostText={onPostChange}\r\n//                         addPost={addNewPost}\r\n//                         posts={state.contentPage.posts}\r\n//                         newPostText={state.contentPage.newPostText} />\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStatetoProps = (state) => {\r\n    return {\r\n        posts: state.contentPage.posts,\r\n        newPostText: state.contentPage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostTextActionCreator(text);\r\n        //     dispatch(action);\r\n        // },\r\n        addPost: (newPostText) => {\r\n            let action = addPostActionCreator(newPostText);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStatetoProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;","import React, { useEffect, useState } from 'react';\r\nimport s from './ContentInfo.module.css';\r\nimport PreloaderComponent from '../../Preloader/preloader';\r\n\r\nconst ContentStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activeteEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactiveteEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusThunk(status);\r\n    };\r\n    \r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activeteEditMode}>{props.status || \"------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactiveteEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContentStatusWithHooks;","import s from './ContentInfo.module.css';\r\nimport PreloaderComponent from '../../Preloader/preloader';\r\nimport ContentStatusWithHooks from './StatusWithHooks';\r\nimport React from 'react';\r\n\r\nconst ContentInfo = React.memo(props => {\r\n    if (!props.profile) {\r\n        return <PreloaderComponent />\r\n    }\r\n    console.log(\"ContentInfo\");\r\n    return (\r\n        <div>\r\n            <div>\r\n                {/* <img src='https://thumbs.dreamstime.com/b/environment-earth-day-hands-trees-growing-seedlings-bokeh-green-background-female-hand-holding-tree-nature-field-gra-130247647.jpg'></img> */}\r\n            </div>\r\n            <div>\r\n                <img src={props.profile.photos.large} />\r\n                <ContentStatusWithHooks status={props.status} updateStatusThunk={props.updateStatusThunk} />\r\n                <div>NAME:</div>\r\n                <span>{props.profile.fullName}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ContentInfo;","import MyPostContainer from './MyPostContainer';\r\nimport ContentInfo from './ContentInfo/ContentInfo';\r\n\r\nconst Content = (props) => {\r\n    return (\r\n        <div className='content'>\r\n            <ContentInfo profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n            <MyPostContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","import Content from './Content';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { userProfileThunk, getStatusThunk, updateStatusThunk } from '../redux/profileReducer';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = { params: useParams() };\r\n\r\n        return <Children {...props} match={match} />\r\n    }\r\n}\r\n\r\nclass ContentContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            // userId = this.props.match.params.authorizedUserId;\r\n            userId = 29103;\r\n        }\r\n\r\n        // usersAPI.getUserProfileData(userId).then(response => {\r\n        //     this.props.setUserPofileAC(response.data);\r\n        // });\r\n        this.props.userProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <Content {...this.props} profile={this.props.profile} status={this.props.status} updateStatusThunk={this.props.updateStatusThunk} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.contentPage.profile,\r\n        status: state.contentPage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { userProfileThunk, getStatusThunk, updateStatusThunk }),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ContentContainer);"],"names":["props","_jsxs","className","s","children","_jsx","src","alt","message","likesCount","maxLength20","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","requiredField","placeholder","id","cols","rows","React","console","log","postMessage","posts","map","post","Post","value","addPost","newPostText","connect","state","contentPage","dispatch","action","addPostActionCreator","MyPost","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_Fragment","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatusThunk","profile","photos","large","ContentStatusWithHooks","fullName","PreloaderComponent","ContentInfo","MyPostContainer","withRouter","Children","match","params","useParams","_objectSpread","ContentContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","userProfileThunk","getStatusThunk","Content","compose","authorizedUserId","auth","isAuth","withAuthRedirect"],"sourceRoot":""}